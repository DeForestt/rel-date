.root "head"
.needs <std>
.needs "DateFunctions.gs"

int _daysInMonth(int month, int year){
    if month == 2 {
        if year % 4 == 0 {
            if year % 100 == 0 {
                if year % 400 == 0 {
                    return 29;
                };
                return 28;
            };
            return 29;
        };
        return 28;
    };

    if (month == 4) | (month == 6) | (month == 9) | (month == 11) {
        return 30;
    };

    return 31;
};

int _daysInYear(int year){
    if year % 4 == 0 {
        if year % 100 == 0 {
            if year % 400 == 0 {
                return 366;
            };
            return 365;
        };
        return 366;
    };
    return 365;
};

int _daysSinceJan1(int month, int day, int year){
    int days = 0;
    for int i = 1; i < month; i++
        days = days + _daysInMonth(i, year);
    
    days = days + day - 1;
    return days;
};

int _dateRelativeTo(int month, int day, int year, int relYear){
    int days = _daysSinceJan1(month, day, year);
    for int i = relYear; i < year; i++
        days = days + _daysInYear(i);
    return days;
};

int _dayOfWeek(int month, int day, int year){
    int days = _dateRelativeTo(month, day, year, 1) + 1;
    return days % 7;
};

adr _dowToString(int dow){
    if dow == 0
        return "Sunday";
    if dow == 1
        return "Monday";
    if dow == 2
        return "Tuesday";
    if dow == 3
        return "Wednesday";
    if dow == 4
        return "Thursday";
    if dow == 5
        return "Friday";
    if dow == 6
        return "Saturday";
    panic("Invalid day of week");
};